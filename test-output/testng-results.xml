<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="16" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-07-04T16:56:21 IST" name="Suite" finished-at="2024-07-04T17:04:20 IST" duration-ms="478745">
    <groups>
      <group name="Smoke Test">
        <method signature="TestScenario3.testShopsy()[pri:9, instance:tests.TestScenario3@3faf2e7d]" name="testShopsy" class="tests.TestScenario3"/>
      </group> <!-- Smoke Test -->
    </groups>
    <test started-at="2024-07-04T16:56:21 IST" name="Test" finished-at="2024-07-04T17:04:20 IST" duration-ms="478745">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T16:56:21 IST" name="beforeSuite" finished-at="2024-07-04T16:56:21 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T16:56:22 IST" name="setUp" finished-at="2024-07-04T16:56:27 IST" duration-ms="5195" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogin(java.lang.String)[pri:4, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T16:56:27 IST" name="testLogin" data-provider="testdata" finished-at="2024-07-04T16:56:45 IST" duration-ms="17504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[9336388567]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T16:56:45 IST" name="tearDown" finished-at="2024-07-04T16:56:45 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=LoginTest.testLogin(java.lang.String)[pri:4, instance:tests.LoginTest@3a94964] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T16:56:45 IST" name="tearDown" finished-at="2024-07-04T16:56:51 IST" duration-ms="6155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.LoginTest@3a94964]" started-at="2024-07-04T17:04:20 IST" name="afterSuite" finished-at="2024-07-04T17:04:21 IST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.TestScenario4">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:02:54 IST" name="setUp" finished-at="2024-07-04T17:02:56 IST" duration-ms="2047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearch(java.lang.String)[pri:14, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:02:56 IST" name="testSearch" data-provider="testdata" finished-at="2024-07-04T17:03:08 IST" duration-ms="11265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:08 IST" name="tearDown" finished-at="2024-07-04T17:03:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearch status=SUCCESS method=TestScenario4.testSearch(java.lang.String)[pri:14, instance:tests.TestScenario4@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:08 IST" name="tearDown" finished-at="2024-07-04T17:03:13 IST" duration-ms="5846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:13 IST" name="setUp" finished-at="2024-07-04T17:03:15 IST" duration-ms="1725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBackToTome()[pri:15, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:15 IST" name="testBackToTome" finished-at="2024-07-04T17:03:24 IST" duration-ms="8676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBackToTome -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:24 IST" name="tearDown" finished-at="2024-07-04T17:03:30 IST" duration-ms="6296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:24 IST" name="tearDown" finished-at="2024-07-04T17:03:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBackToTome status=SUCCESS method=TestScenario4.testBackToTome()[pri:15, instance:tests.TestScenario4@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:30 IST" name="setUp" finished-at="2024-07-04T17:03:33 IST" duration-ms="2568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testClearTrip()[pri:16, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:33 IST" name="testClearTrip" finished-at="2024-07-04T17:03:39 IST" duration-ms="6098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClearTrip -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:39 IST" name="tearDown" finished-at="2024-07-04T17:03:45 IST" duration-ms="6204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:39 IST" name="tearDown" finished-at="2024-07-04T17:03:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testClearTrip status=SUCCESS method=TestScenario4.testClearTrip()[pri:16, instance:tests.TestScenario4@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:45 IST" name="setUp" finished-at="2024-07-04T17:03:47 IST" duration-ms="2148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGiftCards()[pri:17, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:47 IST" name="testGiftCards" finished-at="2024-07-04T17:03:54 IST" duration-ms="6539" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [68c339be5003d778e4d64befc397bc67, isElementDisplayed {id=f.9DC5F6B96BA63A5D05B97750CC79C3EC.d.06C1BD772FC980A703AD6BA80473031A.e.1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61416}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61416/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (68c339be5003d778e4d64befc397bc67)] -> xpath: //span[text()='Gift Cards']]
Session ID: 68c339be5003d778e4d64befc397bc67]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [68c339be5003d778e4d64befc397bc67, isElementDisplayed {id=f.9DC5F6B96BA63A5D05B97750CC79C3EC.d.06C1BD772FC980A703AD6BA80473031A.e.1}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:61416}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61416/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (68c339be5003d778e4d64befc397bc67)] -> xpath: //span[text()='Gift Cards']]
Session ID: 68c339be5003d778e4d64befc397bc67
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:283)
at jdk.internal.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy20.isDisplayed(Unknown Source)
at Pages.actionsPerformed.isGiftCardsElementDisplayed(actionsPerformed.java:68)
at tests.TestScenario4.testGiftCards(TestScenario4.java:196)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGiftCards -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:54 IST" name="tearDown" finished-at="2024-07-04T17:03:54 IST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGiftCards status=FAILURE method=TestScenario4.testGiftCards()[pri:17, instance:tests.TestScenario4@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:03:54 IST" name="tearDown" finished-at="2024-07-04T17:04:00 IST" duration-ms="6082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:04:00 IST" name="setUp" finished-at="2024-07-04T17:04:03 IST" duration-ms="2700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCancellation()[pri:18, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:04:03 IST" name="testCancellation" finished-at="2024-07-04T17:04:14 IST" duration-ms="11282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCancellation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:04:14 IST" name="tearDown" finished-at="2024-07-04T17:04:14 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCancellation status=SUCCESS method=TestScenario4.testCancellation()[pri:18, instance:tests.TestScenario4@4648ce9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario4@4648ce9]" started-at="2024-07-04T17:04:14 IST" name="tearDown" finished-at="2024-07-04T17:04:20 IST" duration-ms="5758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestScenario4 -->
      <class name="tests.TestScenario3">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:26 IST" name="setUp" finished-at="2024-07-04T17:01:28 IST" duration-ms="1940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testShopsy()[pri:9, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:28 IST" name="testShopsy" finished-at="2024-07-04T17:01:38 IST" duration-ms="9883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testShopsy -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:38 IST" name="tearDown" finished-at="2024-07-04T17:01:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testShopsy status=SUCCESS method=TestScenario3.testShopsy()[pri:9, instance:tests.TestScenario3@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:38 IST" name="tearDown" finished-at="2024-07-04T17:01:44 IST" duration-ms="5812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:44 IST" name="setUp" finished-at="2024-07-04T17:01:46 IST" duration-ms="1829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testNotification()[pri:10, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:46 IST" name="testNotification" finished-at="2024-07-04T17:01:58 IST" duration-ms="12034" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotification -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:58 IST" name="tearDown" finished-at="2024-07-04T17:01:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNotification status=SUCCESS method=TestScenario3.testNotification()[pri:10, instance:tests.TestScenario3@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:01:58 IST" name="tearDown" finished-at="2024-07-04T17:02:03 IST" duration-ms="5593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:03 IST" name="setUp" finished-at="2024-07-04T17:02:05 IST" duration-ms="2155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMyntraPage()[pri:11, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:05 IST" name="testMyntraPage" finished-at="2024-07-04T17:02:10 IST" duration-ms="4449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMyntraPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:10 IST" name="tearDown" finished-at="2024-07-04T17:02:10 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMyntraPage status=SUCCESS method=TestScenario3.testMyntraPage()[pri:11, instance:tests.TestScenario3@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:10 IST" name="tearDown" finished-at="2024-07-04T17:02:16 IST" duration-ms="5925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:16 IST" name="setUp" finished-at="2024-07-04T17:02:18 IST" duration-ms="2045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTermsOfUseLink()[pri:12, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:18 IST" name="testTermsOfUseLink" finished-at="2024-07-04T17:02:29 IST" duration-ms="11399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTermsOfUseLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:29 IST" name="tearDown" finished-at="2024-07-04T17:02:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTermsOfUseLink status=SUCCESS method=TestScenario3.testTermsOfUseLink()[pri:12, instance:tests.TestScenario3@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:29 IST" name="tearDown" finished-at="2024-07-04T17:02:35 IST" duration-ms="5766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:35 IST" name="setUp" finished-at="2024-07-04T17:02:38 IST" duration-ms="2661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testOfferZone()[pri:13, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:38 IST" name="testOfferZone" finished-at="2024-07-04T17:02:48 IST" duration-ms="10747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOfferZone -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:48 IST" name="tearDown" finished-at="2024-07-04T17:02:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testOfferZone status=SUCCESS method=TestScenario3.testOfferZone()[pri:13, instance:tests.TestScenario3@3faf2e7d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TestScenario3@3faf2e7d]" started-at="2024-07-04T17:02:48 IST" name="tearDown" finished-at="2024-07-04T17:02:54 IST" duration-ms="5830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestScenario3 -->
      <class name="tests.SearchProduct">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchProduct@bcec031]" started-at="2024-07-04T16:59:58 IST" name="setUp" finished-at="2024-07-04T17:00:01 IST" duration-ms="2833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearch(java.lang.String)[pri:6, instance:tests.SearchProduct@bcec031]" started-at="2024-07-04T17:00:01 IST" name="testSearch" data-provider="testdata" finished-at="2024-07-04T17:00:09 IST" duration-ms="8177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchProduct@bcec031]" started-at="2024-07-04T17:00:09 IST" name="tearDown" finished-at="2024-07-04T17:00:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearch status=SUCCESS method=SearchProduct.testSearch(java.lang.String)[pri:6, instance:tests.SearchProduct@bcec031] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchProduct@bcec031]" started-at="2024-07-04T17:00:09 IST" name="tearDown" finished-at="2024-07-04T17:00:15 IST" duration-ms="5568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchProduct -->
      <class name="tests.ViewCartTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.ViewCartTest@7813cb11]" started-at="2024-07-04T16:59:42 IST" name="setUp" finished-at="2024-07-04T16:59:44 IST" duration-ms="1976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testViewCartPage()[pri:20, instance:tests.ViewCartTest@7813cb11]" started-at="2024-07-04T16:59:44 IST" name="testViewCartPage" finished-at="2024-07-04T16:59:53 IST" duration-ms="8359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testViewCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.ViewCartTest@7813cb11]" started-at="2024-07-04T16:59:53 IST" name="tearDown" finished-at="2024-07-04T16:59:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testViewCartPage status=SUCCESS method=ViewCartTest.testViewCartPage()[pri:20, instance:tests.ViewCartTest@7813cb11] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ViewCartTest@7813cb11]" started-at="2024-07-04T16:59:53 IST" name="tearDown" finished-at="2024-07-04T16:59:58 IST" duration-ms="5652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ViewCartTest -->
      <class name="tests.MobilePageTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.MobilePageTest@3a320ade]" started-at="2024-07-04T16:59:05 IST" name="setUp" finished-at="2024-07-04T16:59:08 IST" duration-ms="2561" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMobilePage()[pri:5, instance:tests.MobilePageTest@3a320ade]" started-at="2024-07-04T16:59:08 IST" name="testMobilePage" finished-at="2024-07-04T16:59:20 IST" duration-ms="12711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMobilePage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.MobilePageTest@3a320ade]" started-at="2024-07-04T16:59:20 IST" name="tearDown" finished-at="2024-07-04T16:59:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMobilePage status=SUCCESS method=MobilePageTest.testMobilePage()[pri:5, instance:tests.MobilePageTest@3a320ade] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.MobilePageTest@3a320ade]" started-at="2024-07-04T16:59:20 IST" name="tearDown" finished-at="2024-07-04T16:59:26 IST" duration-ms="5822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.MobilePageTest -->
      <class name="tests.SellerTestPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SellerTestPage@545de5a4]" started-at="2024-07-04T17:00:15 IST" name="setUp" finished-at="2024-07-04T17:00:17 IST" duration-ms="1937" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSellerPage()[pri:7, instance:tests.SellerTestPage@545de5a4]" started-at="2024-07-04T17:00:17 IST" name="testSellerPage" finished-at="2024-07-04T17:00:35 IST" duration-ms="17964" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Test failed: element not interactable
  (Session info: chrome=126.0.6478.127)
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [555cd1f938e56e330b50f90ac0e6d54c, clickElement {id=f.ECAD0722D33F5121F25A596DE9A05C9C.d.8E1C50E65F4483976AAF53079697367D.e.126}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60678}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60678/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (555cd1f938e56e330b50f90ac0e6d54c)] -> xpath: //a[@class="_1krdK5 _3jeYYh" and @title="Become a Seller"]]
Session ID: 555cd1f938e56e330b50f90ac0e6d54c]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Test failed: element not interactable
  (Session info: chrome=126.0.6478.127)
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [555cd1f938e56e330b50f90ac0e6d54c, clickElement {id=f.ECAD0722D33F5121F25A596DE9A05C9C.d.8E1C50E65F4483976AAF53079697367D.e.126}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60678}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60678/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (555cd1f938e56e330b50f90ac0e6d54c)] -> xpath: //a[@class="_1krdK5 _3jeYYh" and @title="Become a Seller"]]
Session ID: 555cd1f938e56e330b50f90ac0e6d54c
at org.testng.Assert.fail(Assert.java:111)
at tests.SellerTestPage.testSellerPage(SellerTestPage.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSellerPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SellerTestPage@545de5a4]" started-at="2024-07-04T17:00:35 IST" name="tearDown" finished-at="2024-07-04T17:00:35 IST" duration-ms="190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSellerPage status=FAILURE method=SellerTestPage.testSellerPage()[pri:7, instance:tests.SellerTestPage@545de5a4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SellerTestPage@545de5a4]" started-at="2024-07-04T17:00:35 IST" name="tearDown" finished-at="2024-07-04T17:00:41 IST" duration-ms="5786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SellerTestPage -->
      <class name="tests.SignupTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SignupTest@64beebb7]" started-at="2024-07-04T16:59:26 IST" name="setUp" finished-at="2024-07-04T16:59:28 IST" duration-ms="1989" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSignUp()[pri:8, instance:tests.SignupTest@64beebb7]" started-at="2024-07-04T16:59:28 IST" name="testSignUp" finished-at="2024-07-04T16:59:36 IST" duration-ms="8185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SignupTest@64beebb7]" started-at="2024-07-04T16:59:36 IST" name="tearDown" finished-at="2024-07-04T16:59:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignUp status=SUCCESS method=SignupTest.testSignUp()[pri:8, instance:tests.SignupTest@64beebb7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SignupTest@64beebb7]" started-at="2024-07-04T16:59:36 IST" name="tearDown" finished-at="2024-07-04T16:59:42 IST" duration-ms="5782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SignupTest -->
      <class name="tests.GroceryTestPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.GroceryTestPage@5b58ed3c]" started-at="2024-07-04T16:56:51 IST" name="setUp" finished-at="2024-07-04T16:56:53 IST" duration-ms="2246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGroceryPage()[pri:3, instance:tests.GroceryTestPage@5b58ed3c]" started-at="2024-07-04T16:56:53 IST" name="testGroceryPage" finished-at="2024-07-04T16:57:12 IST" duration-ms="18501" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//img[@class="xTaogf _3iTqAS" and @src="https://rukminim2.flixcart.com/flap/50/50/image/ed04b09381eec3f9.jpg?q=50"]"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4ff297636503460169cab9c15324208, findElement {using=xpath, value=//img[@class="xTaogf _3iTqAS" and @src="https://rukminim2.flixcart.com/flap/50/50/image/ed04b09381eec3f9.jpg?q=50"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60241}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60241/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b4ff297636503460169cab9c15324208]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//img[@class="xTaogf _3iTqAS" and @src="https://rukminim2.flixcart.com/flap/50/50/image/ed04b09381eec3f9.jpg?q=50"]"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b4ff297636503460169cab9c15324208, findElement {using=xpath, value=//img[@class="xTaogf _3iTqAS" and @src="https://rukminim2.flixcart.com/flap/50/50/image/ed04b09381eec3f9.jpg?q=50"]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60241}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60241/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b4ff297636503460169cab9c15324208
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at Pages.GroceryPage.clickStaples(GroceryPage.java:49)
at tests.GroceryTestPage.testGroceryPage(GroceryTestPage.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroceryPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.GroceryTestPage@5b58ed3c]" started-at="2024-07-04T16:57:12 IST" name="tearDown" finished-at="2024-07-04T16:57:12 IST" duration-ms="449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGroceryPage status=FAILURE method=GroceryTestPage.testGroceryPage()[pri:3, instance:tests.GroceryTestPage@5b58ed3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.GroceryTestPage@5b58ed3c]" started-at="2024-07-04T16:57:12 IST" name="tearDown" finished-at="2024-07-04T16:57:19 IST" duration-ms="6224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.GroceryTestPage -->
      <class name="tests.TravelTestPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.TravelTestPage@29ef6856]" started-at="2024-07-04T17:00:41 IST" name="setUp" finished-at="2024-07-04T17:00:42 IST" duration-ms="1594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTravelPage()[pri:19, instance:tests.TravelTestPage@29ef6856]" started-at="2024-07-04T17:00:42 IST" name="testTravelPage" finished-at="2024-07-04T17:00:53 IST" duration-ms="10210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTravelPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.TravelTestPage@29ef6856]" started-at="2024-07-04T17:00:53 IST" name="tearDown" finished-at="2024-07-04T17:00:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTravelPage status=SUCCESS method=TravelTestPage.testTravelPage()[pri:19, instance:tests.TravelTestPage@29ef6856] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.TravelTestPage@29ef6856]" started-at="2024-07-04T17:00:53 IST" name="tearDown" finished-at="2024-07-04T17:00:59 IST" duration-ms="6070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TravelTestPage -->
      <class name="tests.AddtocartTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AddtocartTest@24faea88]" started-at="2024-07-04T16:57:19 IST" name="setUp" finished-at="2024-07-04T16:57:21 IST" duration-ms="2646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearch(java.lang.String)[pri:1, instance:tests.AddtocartTest@24faea88]" started-at="2024-07-04T16:57:21 IST" name="testSearch" data-provider="testdata" finished-at="2024-07-04T16:58:59 IST" duration-ms="97300" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[iphone]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@class='QqFHMw vslbG+ In9uk2']"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2eea906559aaca3301a58ea3a31debd8, findElement {using=xpath, value=//button[@class='QqFHMw vslbG+ In9uk2']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60294}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60294/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2eea906559aaca3301a58ea3a31debd8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@class='QqFHMw vslbG+ In9uk2']"}
  (Session info: chrome=126.0.6478.127)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2eea906559aaca3301a58ea3a31debd8, findElement {using=xpath, value=//button[@class='QqFHMw vslbG+ In9uk2']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.127, chrome: {chromedriverVersion: 126.0.6478.126 (d36ace6122e..., userDataDir: C:\Users\SHRUTI~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60294}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:60294/devtoo..., se:cdpVersion: 126.0.6478.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2eea906559aaca3301a58ea3a31debd8
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:607)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:364)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at Pages.AddtoCart.getAddToCartButton(AddtoCart.java:55)
at tests.AddtocartTest.testSearch(AddtocartTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AddtocartTest@24faea88]" started-at="2024-07-04T16:58:59 IST" name="tearDown" finished-at="2024-07-04T16:58:59 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearch status=FAILURE method=AddtocartTest.testSearch(java.lang.String)[pri:1, instance:tests.AddtocartTest@24faea88] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AddtocartTest@24faea88]" started-at="2024-07-04T16:58:59 IST" name="tearDown" finished-at="2024-07-04T16:59:05 IST" duration-ms="6228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AddtocartTest -->
      <class name="tests.AppliancesTestPage">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.AppliancesTestPage@ab7a938]" started-at="2024-07-04T17:00:59 IST" name="setUp" finished-at="2024-07-04T17:01:02 IST" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAppliancesPage()[pri:2, instance:tests.AppliancesTestPage@ab7a938]" started-at="2024-07-04T17:01:02 IST" name="testAppliancesPage" finished-at="2024-07-04T17:01:19 IST" duration-ms="17590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAppliancesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.AppliancesTestPage@ab7a938]" started-at="2024-07-04T17:01:19 IST" name="tearDown" finished-at="2024-07-04T17:01:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAppliancesPage status=SUCCESS method=AppliancesTestPage.testAppliancesPage()[pri:2, instance:tests.AppliancesTestPage@ab7a938] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.AppliancesTestPage@ab7a938]" started-at="2024-07-04T17:01:19 IST" name="tearDown" finished-at="2024-07-04T17:01:26 IST" duration-ms="6695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.AppliancesTestPage -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
